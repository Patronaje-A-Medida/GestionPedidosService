// <auto-generated />
using System;
using GestionPedidosService.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionPedidosService.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211121020503_AddAtelierEntity")]
    partial class AddAtelierEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Atelier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("DescriptionAtelier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("NameAtelier")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RucAtelier")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Atelier");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.FeatureGarment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int>("GarmentId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("TypeFeature")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GarmentId");

                    b.ToTable("FeatureGarment");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Garment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtelierId")
                        .HasColumnType("int");

                    b.Property<byte>("Available")
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeGarment")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<decimal>("FirstRangePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("NameGarment")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("SecondRangePrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Garment");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtelierId")
                        .HasColumnType("int");

                    b.Property<string>("CodeOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserAtelierId")
                        .HasColumnType("int");

                    b.Property<int>("UserClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtelierId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int>("GarmentId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset(7)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GarmentId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.PatternDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PatternGarmentId")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("PatternGarmentId");

                    b.ToTable("PatternDimension");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.PatternGarment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GarmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScaledStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TypePattern")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("GarmentId");

                    b.ToTable("PatternGarment");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.FeatureGarment", b =>
                {
                    b.HasOne("GestionPedidosService.Domain.Entities.Garment", "Garment")
                        .WithMany("FeatureGarments")
                        .HasForeignKey("GarmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garment");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Order", b =>
                {
                    b.HasOne("GestionPedidosService.Domain.Entities.Atelier", "Atelier")
                        .WithMany("Orders")
                        .HasForeignKey("AtelierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atelier");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("GestionPedidosService.Domain.Entities.Garment", "Garment")
                        .WithMany("OrderDetails")
                        .HasForeignKey("GarmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionPedidosService.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garment");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.PatternDimension", b =>
                {
                    b.HasOne("GestionPedidosService.Domain.Entities.PatternGarment", "PatternGarment")
                        .WithMany("PatternDimensions")
                        .HasForeignKey("PatternGarmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatternGarment");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.PatternGarment", b =>
                {
                    b.HasOne("GestionPedidosService.Domain.Entities.Garment", "Garment")
                        .WithMany("PatternGarments")
                        .HasForeignKey("GarmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garment");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Atelier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Garment", b =>
                {
                    b.Navigation("FeatureGarments");

                    b.Navigation("OrderDetails");

                    b.Navigation("PatternGarments");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GestionPedidosService.Domain.Entities.PatternGarment", b =>
                {
                    b.Navigation("PatternDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
